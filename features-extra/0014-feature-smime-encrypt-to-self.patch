From 9ea7c9aaadb50ca621a46fcf4ef3f6de5ec904ff Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Fri, 17 Jun 2016 00:31:48 +0100
Subject: [PATCH 14/14] feature: smime-encrypt-to-self

---
 PATCHES                       |   1 +
 README.smime-encrypt-self     |  50 ++++++++++++++++++++
 crypt.c                       |  17 ++++++-
 doc/manual.xml.head           | 106 ++++++++++++++++++++++++++++++++++++++++++
 doc/muttrc.smime-encrypt-self |  10 ++++
 doc/vimrc.smime-encrypt-self  |   5 ++
 init.h                        |   6 +++
 mutt.h                        |   1 +
 8 files changed, 194 insertions(+), 2 deletions(-)
 create mode 100644 README.smime-encrypt-self
 create mode 100644 doc/muttrc.smime-encrypt-self
 create mode 100644 doc/vimrc.smime-encrypt-self

diff --git a/PATCHES b/PATCHES
index df9707e..b9eeea4 100644
--- a/PATCHES
+++ b/PATCHES
@@ -17,3 +17,4 @@ patch-nested-if-neo-git
 patch-trash-neo-git
 patch-initials-neo-git
 patch-ifdef-neo-git
+patch-smime-encrypt-to-self-neo-git
diff --git a/README.smime-encrypt-self b/README.smime-encrypt-self
new file mode 100644
index 0000000..8cd9267
--- /dev/null
+++ b/README.smime-encrypt-self
@@ -0,0 +1,50 @@
+smime-encrypt-self Patch
+========================
+
+    Save an self-encrypted copy of emails
+
+Patch
+-----
+
+    To check if Mutt supports "smime-encrypt-self", look for
+    "patch-smime-encrypt-self" in the mutt version.
+
+    Dependencies
+    * mutt-1.6.2
+
+Introduction
+------------
+
+    Once you encrypt an email to someone you cannot read it. This is good for
+    security, but bad for record-keeping. If you wanted to keep a copy of an
+    encrypted email you could set $fcc_clear.
+
+    A better option is to enable $smime_encrypt_self, then set
+    $smime_default_key to your personal S/MIME key id.
+
+        set smime_encrypt_self = yes
+        set smime_default_key  = bb345e23.0
+
+Variables
+---------
+
+    | Name                 | Type | Default |
+    |----------------------|------|---------|
+    | 'smime_encrypt_self' | quad | No      |
+
+See Also
+--------
+
+    * NeoMutt Project
+
+Known Bugs
+----------
+
+    None
+
+Credits
+-------
+
+    * Omen Wild <omen@mandarb.com>
+    * Richard Russon <rich@flatcap.org>
+
diff --git a/crypt.c b/crypt.c
index 570cc36..f6fae83 100644
--- a/crypt.c
+++ b/crypt.c
@@ -231,8 +231,21 @@ int mutt_protect (HEADER *msg, char *keylist)
     if ((WithCrypto & APPLICATION_SMIME)
         && (msg->security & APPLICATION_SMIME))
     {
-      if (!(tmp_pbody = crypt_smime_build_smime_entity (tmp_smime_pbody,
-                                                        keylist)))
+			  char *new_keylist = keylist;
+ 
+			  if (SmimeDefaultKey && query_quadoption(OPT_SMIMEENCRYPTSELF, _("Encrypt message to S/MIME Default Key also?")) == M_YES)
+				  {
+					  /* +1 for NULL, +1 for \n */
+					  int size = mutt_strlen(keylist) + mutt_strlen(SmimeDefaultKey) + 2;
+					  new_keylist = safe_malloc(size);
+					  snprintf(new_keylist, size, "%s%s\n", keylist, SmimeDefaultKey);
+				  }
+ 		 
+			  tmp_pbody = crypt_smime_build_smime_entity (tmp_smime_pbody, new_keylist);
+			  if (new_keylist != keylist)
+				  safe_free((void **)&new_keylist);
+			  
+			  if (!tmp_pbody)
       {
 	/* signed ? free it! */
 	return (-1);
diff --git a/doc/manual.xml.head b/doc/manual.xml.head
index b2ded65..272379d 100644
--- a/doc/manual.xml.head
+++ b/doc/manual.xml.head
@@ -13315,6 +13315,112 @@ <sect1 id="trash-folder">
   </sect2>
 </sect1>
 
+<sect1 id="smime-encrypt-self-patch">
+  <title>smime-encrypt-self Patch</title>
+  <subtitle>Save an self-encrypted copy of emails</subtitle>
+
+  <sect2 id="smime-encrypt-self-patch2">
+    <title>Patch</title>
+
+    <para>
+      To check if Mutt supports <quote>smime-encrypt-self</quote>, look for
+      <quote>patch-smime-encrypt-self</quote> in the mutt version.
+      See: <xref linkend="mutt-patches"/>.
+    </para>
+
+    <itemizedlist>
+      <title>Dependencies:</title>
+      <listitem><para>mutt-1.6.2</para></listitem>
+    </itemizedlist>
+
+    <para>This patch is part of the <ulink url="http://www.neomutt.org/">NeoMutt Project</ulink>.</para>
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-intro">
+    <title>Introduction</title>
+
+    <para>
+      Once you encrypt an email to someone you cannot read it.  This is good
+      for security, but bad for record-keeping.  If you wanted to keep a copy
+      of an encrypted email you could set <link linkend="fcc-clear">$fcc_clear</link>.
+    </para>
+
+    <para>
+      A better option is to enable
+      <link linkend="smime-encrypt-self">$smime_encrypt_self</link>, then set
+      <link linkend="smime-default-key">$smime_default_key</link> to your
+      personal S/MIME key id.
+    </para>
+
+<screen>
+set smime_encrypt_self = yes
+set smime_default_key  = bb345e23.0
+</screen>
+
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-variables">
+    <title>Variables</title>
+
+    <table id="table-smime-encrypt-self-variables">
+      <title>smime-encrypt-self Variables</title>
+      <tgroup cols="3">
+        <thead>
+          <row>
+            <entry>Name</entry>
+            <entry>Type</entry>
+            <entry>Default</entry>
+          </row>
+        </thead>
+        <tbody>
+          <row>
+            <entry><literal>smime_encrypt_self</literal></entry>
+            <entry>quad</entry>
+            <entry>No</entry>
+          </row>
+        </tbody>
+      </tgroup>
+    </table>
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-muttrc">
+    <title>Muttrc</title>
+<screen>
+<emphasis role="comment"># This is a complete list of smime-encrypt-self-related configuration.
+ 
+# --------------------------------------------------------------------------
+# VARIABLES - shown with their default values
+# --------------------------------------------------------------------------
+ 
+# Save a copy of outgoing email, encrypted to yourself</emphasis>
+set smime_encrypt_self = "no"
+ 
+<emphasis role="comment"># vim: syntax=muttrc</emphasis>
+</screen>
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-see-also">
+    <title>See Also</title>
+
+    <itemizedlist>
+      <listitem><para><ulink url="http://www.neomutt.org/">NeoMutt Project</ulink></para></listitem>
+    </itemizedlist>
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-known-bugs">
+    <title>Known Bugs</title>
+    <para>None</para>
+  </sect2>
+
+  <sect2 id="smime-encrypt-self-credits">
+    <title>Credits</title>
+    <itemizedlist>
+    <listitem><para>Omen Wild <email>omen@mandarb.com</email></para></listitem>
+    <listitem><para>Richard Russon <email>rich@flatcap.org</email></para></listitem>
+    </itemizedlist>
+  </sect2>
+</sect1>
+
 </chapter>
 
 <chapter id="security">
diff --git a/doc/muttrc.smime-encrypt-self b/doc/muttrc.smime-encrypt-self
new file mode 100644
index 0000000..0ef7c48
--- /dev/null
+++ b/doc/muttrc.smime-encrypt-self
@@ -0,0 +1,10 @@
+# This is a complete list of smime-encrypt-self-related configuration.
+
+# --------------------------------------------------------------------------
+# VARIABLES - shown with their default values
+# --------------------------------------------------------------------------
+
+# Save a copy of outgoing email, encrypted to yourself
+set smime_encrypt_self = "no"
+
+# vim: syntax=muttrc
diff --git a/doc/vimrc.smime-encrypt-self b/doc/vimrc.smime-encrypt-self
new file mode 100644
index 0000000..7fe9357
--- /dev/null
+++ b/doc/vimrc.smime-encrypt-self
@@ -0,0 +1,5 @@
+" Vim syntax file for the mutt smime-encrypt-self patch
+
+syntax keyword muttrcVarQuad    contained skipwhite muttrcVarQuad
+
+" vim: syntax=vim
diff --git a/init.h b/init.h
index 1dbd9c4..3983fbd 100644
--- a/init.h
+++ b/init.h
@@ -3272,6 +3272,12 @@ struct option_t MuttVars[] = {
   ** possible \fCprintf(3)\fP-like sequences.
   ** (S/MIME only)
   */
+  { "smime_encrypt_self",		DT_QUAD,	 R_NONE, OPT_SMIMEENCRYPTSELF, M_NO },
+  /*
+  ** .pp
+  ** Encrypt the message to $$smime_default_key too.
+  ** (S/MIME only)
+  */
   { "smime_encrypt_with",	DT_STR,	 R_NONE, UL &SmimeCryptAlg, UL "aes256" },
   /*
   ** .pp
diff --git a/mutt.h b/mutt.h
index 754705e..bc8f041 100644
--- a/mutt.h
+++ b/mutt.h
@@ -286,6 +286,7 @@ enum
   OPT_MIMEFWDREST,
   OPT_MOVE,
   OPT_PGPMIMEAUTO,     /* ask to revert to PGP/MIME when inline fails */
+  OPT_SMIMEENCRYPTSELF,
 #ifdef USE_POP
   OPT_POPDELETE,
   OPT_POPRECONNECT,
-- 
2.7.4

