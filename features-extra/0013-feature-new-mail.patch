From e1722c27c9d38184b5ee513cf100ade15ef9afca Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Yoshiki=20V=C3=A1zquez=20Baeza?= <yoshiki89@gmail.com>
Date: Sat, 23 Apr 2016 13:33:50 -0700
Subject: [PATCH 13/14] feature: new-mail

This setting executes a command when new mail is received.
---
 PATCHES             |   1 +
 README.new-mail     |  62 ++++++++++++++++++++++
 curs_main.c         |  12 +++++
 doc/manual.xml.head | 147 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 doc/muttrc.new-mail |  18 +++++++
 doc/vimrc.new-mail  |   5 ++
 globals.h           |   1 +
 init.h              |   7 +++
 8 files changed, 252 insertions(+), 1 deletion(-)
 create mode 100644 README.new-mail
 create mode 100644 doc/muttrc.new-mail
 create mode 100644 doc/vimrc.new-mail

diff --git a/PATCHES b/PATCHES
index 23e0bb1..df9707e 100644
--- a/PATCHES
+++ b/PATCHES
@@ -1,3 +1,4 @@
+patch-new-mail-neo-git
 patch-lmdb-neo-git
 patch-nntp-neo-git
 patch-keywords-neo-git
diff --git a/README.new-mail b/README.new-mail
new file mode 100644
index 0000000..07dc80e
--- /dev/null
+++ b/README.new-mail
@@ -0,0 +1,62 @@
+new-mail Patch
+==============
+
+    Execute a command upon the receipt of new mail.
+
+Patch
+-----
+
+    To check if Mutt supports "new-mail", look for "patch-new-mail" in the mutt
+    version.
+
+    Dependencies
+    * mutt-1.6.2
+
+Introduction
+------------
+
+    This patch enables the new_mail_command setting, which can be used to
+    execute a custom script (e.g., a notification handler) upon receiving a new
+    mail.
+
+    The command string can contain expandos, such as '%f' for the folder name.
+    For a complete list, see: $status_format.
+
+    For example in Linux you can use (most distributions already provide
+    notify-send):
+
+        set new_mail_command="notify-send --icon='/home/santiago/Pictures/mutt.png' 'New Email in %f' '%n new messages, %u unread.' &"
+
+    And in OS X you will need to install a command line interface for
+    Notification Center, for example: terminal-notifier https://github.com/julienXX/terminal-notifier
+
+        set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail in %f' -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"
+
+Variables
+---------
+
+    | Name               | Type   | Default |
+    |--------------------|--------|---------|
+    | 'new_mail_command' | string | (empty) |
+
+See Also
+--------
+
+    * NeoMutt project
+    * folder-hook
+
+Known Bugs
+----------
+
+    * Notifies about spurious new email when an email is saved, see Issue #20
+          https://github.com/neomutt/neomutt/issues/20
+    * Will not notify about new e-mail if the pager is open, see Issue #19
+          https://github.com/neomutt/neomutt/issues/19
+
+Credits
+-------
+
+    * Yoshiki Vazquez-Baeza <yoshiki@ucsd.edu>
+    * Santiago Torres-Arias <santiago@nyu.edu>
+    * Richard Russon <rich@flatcap.org>
+
diff --git a/curs_main.c b/curs_main.c
index 5631e8a..a8e1935 100644
--- a/curs_main.c
+++ b/curs_main.c
@@ -793,6 +793,12 @@ int mutt_index_menu (void)
 	  mutt_message _("New mail in this mailbox.");
 	  if (option (OPTBEEPNEW))
 	    beep ();
+	  if (NewMailCmd)
+	  {
+	    char cmd[LONG_STRING];
+	    menu_status_line(cmd, sizeof(cmd), menu, NONULL(NewMailCmd));
+	    mutt_system(cmd);
+	  }
 	} else if (check == M_FLAGS)
 	  mutt_message _("Mailbox was externally modified.");
 
@@ -819,6 +825,12 @@ int mutt_index_menu (void)
          menu->redraw |= REDRAW_STATUS;
          if (option (OPTBEEPNEW))
            beep();
+         if (NewMailCmd)
+         {
+           char cmd[LONG_STRING];
+           menu_status_line(cmd, sizeof(cmd), menu, NONULL(NewMailCmd));
+           mutt_system(cmd);
+         }
        }
      }
      else
diff --git a/doc/manual.xml.head b/doc/manual.xml.head
index d3c447d..b2ded65 100644
--- a/doc/manual.xml.head
+++ b/doc/manual.xml.head
@@ -6824,7 +6824,10 @@ <sect2 id="new-mail-formats">
 <link linkend="maildir-trash">$maildir_trash</link>). For MH folders, a
 mailbox is considered having new mail if there's at least one message in
 the <quote>unseen</quote> sequence as specified by <link
-linkend="mh-seq-unseen">$mh_seq_unseen</link>.
+linkend="mh-seq-unseen">$mh_seq_unseen</link>. Optionally, <link
+linkend="new-mail-command">$new_mail_command</link> can be configured to
+execute an external program every time new mail is detected in the current
+inbox.
 </para>
 
 <para>
@@ -10937,6 +10940,148 @@ <sect1 id="nested-if">
   </sect2>
 </sect1>
 
+<sect1 id="new-mail-hook">
+  <title>new-mail Patch</title>
+  <subtitle>Execute a command upon the receipt of new mail.</subtitle>
+
+  <sect2 id="new-mail-patch">
+    <title>Patch</title>
+
+    <para>
+      To check if Mutt supports <quote>new-mail</quote>, look for
+      <quote>patch-new-mail</quote> in the mutt version.
+      See: <xref linkend="mutt-patches"/>.
+    </para>
+
+    <itemizedlist>
+      <title>Dependencies:</title>
+      <listitem><para>mutt-1.6.2</para></listitem>
+    </itemizedlist>
+
+    <para>This patch is part of the <ulink url="http://www.neomutt.org/">NeoMutt Project</ulink>.</para>
+  </sect2>
+
+  <sect2 id="new-mail-intro">
+    <title>Introduction</title>
+
+    <para>
+      This patch enables the new_mail_command setting, which can be used to
+      execute a custom script (e.g., a notification handler) upon receiving a
+      new mail.
+    </para>
+
+    <para>
+      The command string can contain expandos, such as <literal>%f</literal>
+      for the folder name.  For a complete list, see:
+      <link linkend="status-format">$status_format</link>.
+    </para>
+
+    <para>
+      For example in Linux you can use (most distributions already provide notify-send):
+    </para>
+
+<screen>
+set new_mail_command="notify-send --icon='/home/santiago/Pictures/mutt.png' 'New Email in %f' '%n new messages, %u unread.' &amp;"
+</screen>
+
+    <para>
+      And in OS X you will need to install a command line interface for
+      Notification Center, for example
+      <ulink url="https://github.com/julienXX/terminal-notifier">terminal-notifier</ulink>:
+    </para>
+
+<screen>
+set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail in %f' -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"
+</screen>
+
+  </sect2>
+
+  <sect2 id="new-mail-variables">
+    <title>Variables</title>
+
+    <table id="table-new-mail-variables">
+      <title>New Mail Command Variables</title>
+      <tgroup cols="3">
+        <thead>
+          <row>
+            <entry>Name</entry>
+            <entry>Type</entry>
+            <entry>Default</entry>
+          </row>
+        </thead>
+        <tbody>
+          <row>
+            <entry><literal>new_mail_command</literal></entry>
+            <entry>string</entry>
+            <entry>(empty)</entry>
+          </row>
+        </tbody>
+      </tgroup>
+    </table>
+  </sect2>
+
+  <sect2 id="new-mail-muttrc">
+    <title>Muttrc</title>
+<screen>
+<emphasis role="comment"># Example Mutt config file for the 'new-mail-command' patch.
+ 
+# --------------------------------------------------------------------------
+# VARIABLES - shown with their default values
+# --------------------------------------------------------------------------
+ 
+# Set the command you want mutt to execute upon the receipt of a new email</emphasis>
+set new_mail_command = ""
+ 
+<emphasis role="comment"># Linux example:
+# set new_command="notify-send --icon='/home/santiago/Pictures/mutt.png' 'New Email in %f' '%n new messages, %u unread.' &amp;"
+ 
+# OS X example:
+# set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail in %f' -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"
+
+# --------------------------------------------------------------------------
+
+# vim: syntax=muttrc</emphasis>
+</screen>
+  </sect2>
+
+  <sect2 id="new-mail-see-also">
+    <title>See Also</title>
+
+    <itemizedlist>
+      <listitem><para><ulink url="http://www.neomutt.org/">NeoMutt Project</ulink></para></listitem>
+      <listitem><para><link linkend="folder-hook">folder-hook</link></para></listitem>
+    </itemizedlist>
+  </sect2>
+
+  <sect2 id="new-mail-known-bugs">
+    <title>Known Bugs</title>
+    <itemizedlist>
+      <listitem>
+        <para>
+          Notifies about spurious <emphasis role="bold">new email</emphasis>
+          when an email is saved, see
+          <ulink url="https://github.com/neomutt/neomutt/issues/20">Issue #20</ulink>
+        </para>
+    </listitem>
+    <listitem>
+      <para>
+        Will not notify about new e-mail if the pager is open, see
+        <ulink url="https://github.com/neomutt/neomutt/issues/19">Issue #19</ulink>
+      </para>
+    </listitem>
+    </itemizedlist>
+  </sect2>
+
+  <sect2 id="new-mail-credits">
+    <title>Credits</title>
+    <itemizedlist>
+    <listitem><para>Yoshiki Vazquez-Baeza <email>yoshiki@ucsd.edu</email></para></listitem>
+    <listitem><para>Santiago Torres-Arias <email>santiago@nyu.edu</email></para></listitem>
+    <listitem><para>Richard Russon <email>rich@flatcap.org</email></para></listitem>
+    </itemizedlist>
+  </sect2>
+</sect1>
+
 <sect1 id="nntp">
   <title>NNTP Patch</title>
   <subtitle>Talk to a Usenet news server</subtitle>
diff --git a/doc/muttrc.new-mail b/doc/muttrc.new-mail
new file mode 100644
index 0000000..3c3ce1f
--- /dev/null
+++ b/doc/muttrc.new-mail
@@ -0,0 +1,18 @@
+# Example Mutt config file for the 'new-mail-command' patch.
+
+# --------------------------------------------------------------------------
+# VARIABLES - shown with their default values
+# --------------------------------------------------------------------------
+
+# Set the command you want mutt to execute upon the receipt of a new email
+set new_mail_command = ""
+
+# Linux example:
+# set new_command="notify-send --icon='/home/santiago/Pictures/mutt.png' 'New Email in %f' '%n new messages, %u unread.' &"
+
+# OS X example:
+# set new_mail_command="terminal-notifier -title '%v' -subtitle 'New Mail in %f' -message '%n new messages, %u unread.' -activate 'com.apple.Terminal'"
+
+# --------------------------------------------------------------------------
+
+# vim: syntax=muttrc
diff --git a/doc/vimrc.new-mail b/doc/vimrc.new-mail
new file mode 100644
index 0000000..0d58075
--- /dev/null
+++ b/doc/vimrc.new-mail
@@ -0,0 +1,5 @@
+" Vim syntax file for the mutt new-mail patch
+
+syntax keyword muttrcVarStr     contained skipwhite new_mail_command         nextgroup=muttrcVarEqualsIdxFmt
+
+" vim: syntax=vim
diff --git a/globals.h b/globals.h
index 07e77ed..3e3e4da 100644
--- a/globals.h
+++ b/globals.h
@@ -123,6 +123,7 @@ WHERE char *Postponed;
 WHERE char *PostponeEncryptAs;
 WHERE char *Prefix;
 WHERE char *PrintCmd;
+WHERE char *NewMailCmd;
 WHERE char *QueryCmd;
 WHERE char *QueryFormat;
 WHERE char *Realname;
diff --git a/init.h b/init.h
index 93a1fac..1dbd9c4 100644
--- a/init.h
+++ b/init.h
@@ -307,6 +307,13 @@ struct option_t MuttVars[] = {
   { "beep",		DT_BOOL, R_NONE, OPTBEEP, 1 },
   /*
   ** .pp
+  ** If \fIset\fP, Mutt will call this command after a new message is received.
+  ** See the $$status_format documentation for the values that can be formatted
+  ** into this command.
+  */
+  { "new_mail_command",	DT_PATH, R_NONE, UL &NewMailCmd, UL NULL },
+  /*
+  ** .pp
   ** When this variable is \fIset\fP, mutt will beep when an error occurs.
   */
   { "beep_new",		DT_BOOL, R_NONE, OPTBEEPNEW, 0 },
-- 
2.7.4

