From b688e28e93b55041fb5e96f554eeb71ed984c454 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Tue, 24 May 2016 17:27:07 +0100
Subject: [PATCH 05/11] feature: tls sni

---
 PATCHES             |   1 +
 README.SSL          |  18 +++++++--
 README.tls-sni      |  51 +++++++++++++++++++++++++
 doc/manual.xml.head | 107 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 doc/muttrc.tls-sni  |   0
 mutt_ssl.c          |  12 ++++++
 6 files changed, 186 insertions(+), 3 deletions(-)
 create mode 100644 README.tls-sni
 create mode 100644 doc/muttrc.tls-sni

diff --git a/PATCHES b/PATCHES
index a377e52..7afe94b 100644
--- a/PATCHES
+++ b/PATCHES
@@ -9,3 +9,4 @@ patch-progress-neo-UNKNOWN
 patch-skip-quoted-neo-UNKNOWN
 patch-status-color-neo-UNKNOWN
 patch-index-color-neo-UNKNOWN
+patch-tls-sni-neo-UNKNOWN
diff --git a/README.SSL b/README.SSL
index 75cac80..90290e0 100644
--- a/README.SSL
+++ b/README.SSL
@@ -5,7 +5,7 @@ Compilation
 -----------
 If you want to have SSL support in mutt, you need to install OpenSSL
 (http://www.openssl.org) libraries and headers before compiling.
-OpenSSL versions 0.9.3 through 0.9.6a have been tested.
+OpenSSL versions 0.9.3 through 1.0.1c have been tested.
 
 For SSL support to be enabled, you need to run the ``configure''
 script with ``--enable-imap --with-ssl[=PFX]'' parameters.  If the
@@ -65,6 +65,12 @@ certificate, the connection will be established. Accepted certificates
 can also be saved so that further connections to the server are
 automatically accepted. 
 
+If OpenSSL was built with support for ServerNameIndication (SNI) and TLS
+is used in the negotiation, mutt will send its idea of the server-name
+as part of the TLS negotiation.  This allows the server to select an
+appropriate certificate, in the event that one server handles multiple
+hostnames with different certificates.
+
 If your organization has several equivalent IMAP-servers, each of them
 should have a unique certificate which is signed with a common
 certificate.  If you want to use all of those servers, you don't need to
@@ -102,9 +108,15 @@ you know which options do not work, you can set the variables for non-working
 protocols to know.  The variables for the protocols are ssl_use_tlsv1, 
 ssl_use_sslv2, and ssl_use_sslv3.
 
+To verify TLS SNI support by a server, you can use:
+    openssl s_client -host <imap server> -port <port> \
+        -tls1 -servername <imap server>
+
+
 -- 
 Tommi Komulainen
 Tommi.Komulainen@iki.fi
 
-Updated by Jeremy Katz
-katzj@linuxpower.org
+Updated by:
+  Jeremy Katz <katzj@linuxpower.org>
+  Phil Pennock <mutt-dev@spodhuis.org>
diff --git a/README.tls-sni b/README.tls-sni
new file mode 100644
index 0000000..7ff94d8
--- /dev/null
+++ b/README.tls-sni
@@ -0,0 +1,51 @@
+TLS-SNI Patch
+=============
+
+    Negotiate with a server for a TSL/SSL certificate
+
+Patch
+-----
+
+    To check if Mutt supports "TLS-SNI", look for "patch-tls-sni" in the mutt
+    version.
+
+    Dependencies
+    * mutt-1.6.1
+    * OpenSSL
+
+Introduction
+------------
+
+    The "TLS-SNI" patch adds support for TLS virtual hosting. If your mail
+    server doesn't support this everything will still work normally.
+
+    TLS supports sending the expected server hostname during the handshake, via
+    the SNI extension. This can be used to select a server certificate to issue
+    to the client, permitting virtual-hosting without requiring multiple IP
+    addresses.
+
+    This has been tested against Exim 4.80, which optionally logs SNI and can
+    perform vhosting.
+
+    To verify TLS SNI support by a server, you can use:
+
+        openssl s_client -host <imap server> -port <port> -tls1 -servername
+    <imap server>
+
+See Also
+--------
+
+    * NeoMutt project
+
+Known Bugs
+----------
+
+    None
+
+Credits
+-------
+
+    * Jeremy Katz <katzj@linuxpower.org>
+    * Phil Pennock <mutt-dev@spodhuis.demon.nl>
+    * Richard Russon <rich@flatcap.org>
+
diff --git a/doc/manual.xml.head b/doc/manual.xml.head
index acdb199..e5c5098 100644
--- a/doc/manual.xml.head
+++ b/doc/manual.xml.head
@@ -11216,6 +11216,113 @@ <sect1 id="status-color">
 	</sect2>
 </sect1>
 
+<sect1 id="tls-sni">
+	<title>TLS-SNI Patch</title>
+	<subtitle>Negotiate with a server for a TSL/SSL certificate</subtitle>
+
+	<sect2 id="tls-sni-patch">
+		<title>Patch</title>
+
+		<para>
+			To check if Mutt supports <quote>TLS-SNI</quote>, look for
+			<quote>patch-tls-sni</quote> in the mutt version.
+			See: <xref linkend="mutt-patches"/>.
+		</para>
+
+		<itemizedlist>
+			<title>Dependencies:</title>
+			<listitem><para>mutt-1.6.1</para></listitem>
+			<listitem><para>OpenSSL</para></listitem>
+		</itemizedlist>
+
+		<para>This patch is part of the <ulink url="http://www.neomutt.org/">NeoMutt Project</ulink>.</para>
+	</sect2>
+
+	<sect2 id="tls-sni-intro">
+		<title>Introduction</title>
+
+		<para>
+		The <quote>TLS-SNI</quote> patch adds support for TLS virtual hosting.
+		If your mail server doesn't support this everything will still work
+		normally.
+		</para>
+
+		<para>
+		TLS supports sending the expected server hostname during the
+		handshake, via the SNI extension.  This can be used to select a
+		server certificate to issue to the client, permitting
+		virtual-hosting without requiring multiple IP addresses.
+		</para>
+
+		<para>
+		This has been tested against Exim 4.80, which optionally logs SNI
+		and can perform vhosting.
+		</para>
+
+        <para>
+		To verify TLS SNI support by a server, you can use:
+        </para>
+
+<screen>
+openssl s_client -host &lt;imap server&gt; -port &lt;port&gt; -tls1 -servername &lt;imap server&gt;
+</screen>
+	</sect2>
+
+<!--
+	<sect2 id="tls-sni-variables">
+		<title>Variables</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-functions">
+		<title>Functions</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-commands">
+		<title>Commands</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-colors">
+		<title>Colors</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-sort">
+		<title>Sort</title>
+		<para>None</para>
+	</sect2>
+-->
+
+	<sect2 id="tls-sni-muttrc">
+		<title>Muttrc</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-see-also">
+		<title>See Also</title>
+
+		<itemizedlist>
+			<listitem><para><ulink url="http://www.neomutt.org/">NeoMutt Project</ulink></para></listitem>
+		</itemizedlist>
+	</sect2>
+
+	<sect2 id="tls-sni-known-bugs">
+		<title>Known Bugs</title>
+		<para>None</para>
+	</sect2>
+
+	<sect2 id="tls-sni-credits">
+		<title>Credits</title>
+		<itemizedlist>
+		<listitem><para>Jeremy Katz <email>katzj@linuxpower.org</email></para></listitem>
+		<listitem><para>Phil Pennock <email>mutt-dev@spodhuis.demon.nl</email></para></listitem>
+		<listitem><para>Richard Russon <email>rich@flatcap.org</email></para></listitem>
+		</itemizedlist>
+	</sect2>
+</sect1>
+
 <sect1 id="trash-folder">
 	<title>Trash Folder Patch</title>
 	<subtitle>Automatically move "deleted" emails to a trash bin</subtitle>
diff --git a/doc/muttrc.tls-sni b/doc/muttrc.tls-sni
new file mode 100644
index 0000000..e69de29
diff --git a/mutt_ssl.c b/mutt_ssl.c
index a6cdd10..8cadc4f 100644
--- a/mutt_ssl.c
+++ b/mutt_ssl.c
@@ -401,6 +401,18 @@ static int ssl_negotiate (CONNECTION *conn, sslsockdata* ssldata)
   SSL_set_mode (ssldata->ssl, SSL_MODE_AUTO_RETRY);
 #endif
 
+#if (OPENSSL_VERSION_NUMBER >= 0x0090806fL) && !defined(OPENSSL_NO_TLSEXT)
+  /* TLS Virtual-hosting requires that the server present the correct
+   * certificate; to do this, the ServerNameIndication TLS extension is used.
+   * If TLS is negotiated, and OpenSSL is recent enough that it might have
+   * support, and support was enabled when OpenSSL was built, mutt supports
+   * sending the hostname we think we're connecting to, so a server can send
+   * back the correct certificate.
+   * This has been tested over SMTP against Exim 4.80.
+   * Not yet found an IMAP server which supports this. */
+  SSL_set_tlsext_host_name (ssldata->ssl, conn->account.host);
+#endif
+
   if ((err = SSL_connect (ssldata->ssl)) != 1)
   {
     switch (SSL_get_error (ssldata->ssl, err))
-- 
2.8.2

