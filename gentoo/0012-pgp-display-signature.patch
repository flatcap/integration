From 0ccfcd0a956267220edb3ea440d60c8a613b6640 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Mon, 30 May 2016 03:56:57 +0100
Subject: [PATCH 12/13] pgp-display-signature

pgp/smime: allow {pgp,smime}_decode_command output to be hidden

The pgp_display_signature boolean option controls whether the sometimes
very verbose output of {pgp,smime}_decode_command should be displayed.
Since it can clutter up the display a lot, leaving little to no space at
all to display the actual email contents, people might want to hide the
output and just rely on the status bar message reporting valid or
invalid.

---
 PATCHES |  1 +
 init.h  |  8 ++++++++
 mutt.h  |  1 +
 pgp.c   | 26 +++++++++++++++++---------
 smime.c | 11 +++++++----
 5 files changed, 34 insertions(+), 13 deletions(-)

diff --git a/PATCHES b/PATCHES
index a0c7a0a..98ae520 100644
--- a/PATCHES
+++ b/PATCHES
@@ -1,3 +1,4 @@
+fg.gpg_smime_output
 patch-1.5.11.vk.pgp_verbose_mime
 dgc.subjrx
 fg.change_folder_next
diff --git a/init.h b/init.h
index b8a312b..be93b6f 100644
--- a/init.h
+++ b/init.h
@@ -2355,6 +2355,14 @@ struct option_t MuttVars[] = {
   ** possible \fCprintf(3)\fP-like sequences.
   ** (PGP only)
   */
+  { "pgp_display_signature",  DT_BOOL, R_NONE, OPTPGPDISPLSIG, 1},
+  /*
+  ** .pp
+  ** If \fIset\fP, mutt will display the pgp_decode_command and
+  ** smime_decode_command outputs.
+  ** Defaults to true.
+  ** (PGP/SMIME only)
+  */ 
   { "pipe_decode",	DT_BOOL, R_NONE, OPTPIPEDECODE, 0 },
   /*
   ** .pp
diff --git a/mutt.h b/mutt.h
index fbd6aaf..2987ba9 100644
--- a/mutt.h
+++ b/mutt.h
@@ -555,6 +555,7 @@ enum
   OPTPGPSHOWUNUSABLE,
   OPTPGPAUTOINLINE,
   OPTPGPREPLYINLINE,
+  OPTPGPDISPLSIG,
 
   /* news options */
 
diff --git a/pgp.c b/pgp.c
index 6265a7f..edede37 100644
--- a/pgp.c
+++ b/pgp.c
@@ -209,15 +209,18 @@ static int pgp_copy_checksig (FILE *fpin, FILE *fpout)
       
       if (strncmp (line, "[GNUPG:] ", 9) == 0)
 	continue;
-      fputs (line, fpout);
-      fputc ('\n', fpout);
+      if (option (OPTPGPDISPLSIG)) {
+	fputs (line, fpout);
+	fputc ('\n', fpout);
+      }
     }
     FREE (&line);
   }
   else
   {
     dprint (2, (debugfile, "pgp_copy_checksig: No pattern.\n"));
-    mutt_copy_stream (fpin, fpout);
+    if (option (OPTPGPDISPLSIG))
+      mutt_copy_stream (fpin, fpout);
     rv = 1;
   }
 
@@ -462,7 +465,8 @@ int pgp_application_pgp_handler (BODY *m, STATE *s)
 
 	  if (s->flags & MUTT_DISPLAY)
 	  {
-	    crypt_current_time (s, "PGP");
+	    if (option (OPTPGPDISPLSIG))
+	      crypt_current_time (s, "PGP");
 	    rc = pgp_copy_checksig (pgperr, s->fpout);
 	  }
 	  
@@ -480,7 +484,8 @@ int pgp_application_pgp_handler (BODY *m, STATE *s)
 	     */
 	    if (rc == -1 || rv) maybe_goodsig = 0;
 	    
-	    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+	    if (option (OPTPGPDISPLSIG))
+	      state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
 	  }
 	  if (pgp_use_gpg_agent())
 	    mutt_need_hard_redraw ();
@@ -724,7 +729,8 @@ int pgp_verify_one (BODY *sigbdy, STATE *s, const char *tempfile)
     return -1;
   }
   
-  crypt_current_time (s, "PGP");
+  if (option (OPTPGPDISPLSIG))
+    crypt_current_time (s, "PGP");
   
   if((thepid = pgp_invoke_verify (NULL, &pgpout, NULL, 
 				   -1, -1, fileno(pgperr),
@@ -749,7 +755,8 @@ int pgp_verify_one (BODY *sigbdy, STATE *s, const char *tempfile)
 
   safe_fclose (&pgperr);
 
-  state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+  if (option (OPTPGPDISPLSIG))
+    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
 
   mutt_unlink (sigfile);
   mutt_unlink (pgperrfile);
@@ -961,7 +968,8 @@ BODY *pgp_decrypt_part (BODY *a, STATE *s, FILE *fpout, BODY *p)
       p->goodsig = 1;
     else
       p->goodsig = 0;
-    state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
+    if (option (OPTPGPDISPLSIG))
+      state_attach_puts (_("[-- End of PGP output --]\n\n"), s);
   }
   safe_fclose (&pgperr);
 
@@ -1092,7 +1100,7 @@ int pgp_encrypted_handler (BODY *a, STATE *s)
     return -1;
   }
 
-  if (s->flags & MUTT_DISPLAY) crypt_current_time (s, "PGP");
+  if (s->flags & MUTT_DISPLAY && option (OPTPGPDISPLSIG)) crypt_current_time (s, "PGP");
 
   if ((tattach = pgp_decrypt_part (a, s, fpout, a)) != NULL)
   {
diff --git a/smime.c b/smime.c
index c68f7e8..cb4323b 100644
--- a/smime.c
+++ b/smime.c
@@ -1756,7 +1756,8 @@ int smime_verify_one (BODY *sigbdy, STATE *s, const char *tempfile)
     return -1;
   }
   
-  crypt_current_time (s, "OpenSSL");
+  if (option (OPTPGPDISPLSIG))
+    crypt_current_time (s, "OpenSSL");
   
   if ((thepid = smime_invoke_verify (NULL, &smimeout, NULL, 
 				   -1, -1, fileno (smimeerr),
@@ -1786,10 +1787,12 @@ int smime_verify_one (BODY *sigbdy, STATE *s, const char *tempfile)
   
   fflush (smimeerr);
   rewind (smimeerr);
-  mutt_copy_stream (smimeerr, s->fpout);
+  if (option (OPTPGPDISPLSIG))
+    mutt_copy_stream (smimeerr, s->fpout);
   safe_fclose (&smimeerr);
     
-  state_attach_puts (_("[-- End of OpenSSL output --]\n\n"), s);
+  if (option (OPTPGPDISPLSIG))
+    state_attach_puts (_("[-- End of OpenSSL output --]\n\n"), s);
   
   mutt_unlink (signedfile);
   mutt_unlink (smimeerrfile);
@@ -1906,7 +1909,7 @@ static BODY *smime_handle_entity (BODY *m, STATE *s, FILE *outFile)
     fflush (smimeerr);
     rewind (smimeerr);
     
-    if ((c = fgetc (smimeerr)) != EOF)
+    if ((c = fgetc (smimeerr)) != EOF && option (OPTPGPDISPLSIG))
     {
       ungetc (c, smimeerr);
       
-- 
2.8.2

