From 46b1e8dfe03f536261b39a2099d5621de83ae81e Mon Sep 17 00:00:00 2001
From: Karel Zak <kzak@redhat.com>
Date: Thu, 6 Sep 2012 09:31:54 +0200
Subject: [PATCH 01/11] add strndup.c strnlen.c

Reported-by: Vladimir.Marek@oracle.com
Signed-off-by: Karel Zak <kzak@redhat.com>
---
 configure.ac |  2 +-
 protos.h     |  9 +++++++++
 strndup.c    | 19 +++++++++++++++++++
 strnlen.c    | 20 ++++++++++++++++++++
 4 files changed, 49 insertions(+), 1 deletion(-)
 create mode 100644 strndup.c
 create mode 100644 strnlen.c

diff --git a/configure.ac b/configure.ac
index 5bfc1e1..d029aa3 100644
--- a/configure.ac
+++ b/configure.ac
@@ -396,7 +396,7 @@ AC_CHECK_TYPE(ssize_t, int)
 
 AC_CHECK_FUNCS(fgetpos memmove setegid srand48 strerror)
 
-AC_REPLACE_FUNCS([setenv strcasecmp strdup strsep strtok_r wcscasecmp])
+AC_REPLACE_FUNCS([setenv strcasecmp strdup strndup strnlen strsep strtok_r wcscasecmp])
 AC_REPLACE_FUNCS([strcasestr mkdtemp])
 
 AC_CHECK_FUNC(getopt)
diff --git a/protos.h b/protos.h
index d9c0a17..4d593f1 100644
--- a/protos.h
+++ b/protos.h
@@ -1,5 +1,6 @@
 /*
  * Copyright (C) 1996-2000,2007,2010,2013 Michael R. Elkins <me@mutt.org>
+ * Copyright (C) 2013 Karel Zak <kzak@redhat.com>
  * 
  *     This program is free software; you can redistribute it and/or modify
  *     it under the terms of the GNU General Public License as published by
@@ -585,3 +586,11 @@ char *strcasestr (const char *, const char *);
 #ifndef HAVE_MKDTEMP
 char *mkdtemp (char *tmpl);
 #endif
+
+#ifndef HAVE_STRNLEN
+size_t strnlen(const char *s, size_t maxlen);
+#endif
+
+#ifndef HAVE_STRNDUP
+char *strndup(const char *s, size_t n);
+#endif
diff --git a/strndup.c b/strndup.c
new file mode 100644
index 0000000..c560cd5
--- /dev/null
+++ b/strndup.c
@@ -0,0 +1,19 @@
+/*
+ * Copyright (C) 2013 Karel Zak <kzak@redhat.com>
+ */
+
+#if HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include "mutt.h"
+
+char *strndup(const char *s, size_t n)
+{
+	size_t len = strnlen(s, n);
+	char *new = safe_malloc((len + 1) * sizeof(char));
+	if (!new)
+		return NULL;
+	new[len] = '\0';
+	return (char *) memcpy(new, s, len);
+}
diff --git a/strnlen.c b/strnlen.c
new file mode 100644
index 0000000..278a988
--- /dev/null
+++ b/strnlen.c
@@ -0,0 +1,20 @@
+/*
+ * Copyright (C) 2013 Karel Zak <kzak@redhat.com>
+ */
+
+#if HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include "mutt.h"
+
+size_t strnlen(const char *s, size_t maxlen)
+{
+        int i;
+
+        for (i = 0; i < maxlen; i++) {
+                if (s[i] == '\0')
+                        return i + 1;
+        }
+        return maxlen;
+}
-- 
2.7.4

