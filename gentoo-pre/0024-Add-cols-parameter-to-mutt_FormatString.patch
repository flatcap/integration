From 92bf54482726f841bc51359deef109f34080938c Mon Sep 17 00:00:00 2001
From: Kevin McCarthy <kevin@8t8.us>
Date: Wed, 27 Apr 2016 17:56:59 -0700
Subject: [PATCH 24/31] Add cols parameter to mutt_FormatString()

Continuing with the conversion to using windows for screen drawing,
mutt_FormatString() was directly using COLS for right justification
and similar formatting.  Instead pass in a parameter, cols.

This change involved seeding the parameter through callback functions
too, as many of them call mutt_FormatString() back.
---
 addrbook.c    |  4 ++--
 browser.c     | 18 +++++++++---------
 compose.c     | 18 +++++++++---------
 compress.c    |  5 +++--
 crypt-gpgme.c |  7 ++++---
 hdrline.c     |  9 +++++----
 muttlib.c     | 25 +++++++++++++------------
 newsrc.c      |  6 +++---
 nntp.h        |  2 +-
 pgpinvoke.c   |  7 ++++---
 pgpkey.c      |  7 ++++---
 protos.h      |  5 +++--
 query.c       |  8 ++++----
 recvattach.c  |  7 ++++---
 remailer.c    |  7 ++++---
 sendlib.c     |  2 +-
 sidebar.c     |  7 ++++---
 smime.c       |  7 ++++---
 status.c      | 14 +++++++-------
 19 files changed, 88 insertions(+), 77 deletions(-)

diff --git a/addrbook.c b/addrbook.c
index 8767a00..aa844f4 100644
--- a/addrbook.c
+++ b/addrbook.c
@@ -43,7 +43,7 @@ static const struct mapping_t AliasHelp[] = {
 };
 
 static const char *
-alias_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+alias_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 		  const char *fmt, const char *ifstring, const char *elsestring,
 		  unsigned long data, format_flag flags)
 {
@@ -80,7 +80,7 @@ alias_format_str (char *dest, size_t destlen, size_t col, char op, const char *s
 
 static void alias_entry (char *s, size_t slen, MUTTMENU *m, int num)
 {
-  mutt_FormatString (s, slen, 0, NONULL (AliasFmt), alias_format_str, (unsigned long) ((ALIAS **) m->data)[num], M_FORMAT_ARROWCURSOR);
+  mutt_FormatString (s, slen, 0, MuttIndexWindow->cols, NONULL (AliasFmt), alias_format_str, (unsigned long) ((ALIAS **) m->data)[num], M_FORMAT_ARROWCURSOR);
 }
 
 static int alias_tag (MUTTMENU *menu, int n, int m)
diff --git a/browser.c b/browser.c
index 3ffcd13..3185422 100644
--- a/browser.c
+++ b/browser.c
@@ -209,7 +209,7 @@ static int link_is_dir (const char *folder, const char *path)
 }
 
 static const char *
-folder_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+folder_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 		   const char *fmt, const char *ifstring, const char *elsestring,
 		   unsigned long data, format_flag flags)
 {
@@ -411,16 +411,16 @@ folder_format_str (char *dest, size_t destlen, size_t col, char op, const char *
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, folder_format_str, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, folder_format_str, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, folder_format_str, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, folder_format_str, data, 0);
 
   return (src);
 }
 
 #ifdef USE_NNTP
 static const char *
-newsgroup_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+newsgroup_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 		      const char *fmt, const char *ifstring, const char *elsestring,
 		      unsigned long data, format_flag flags)
 {
@@ -460,10 +460,10 @@ newsgroup_format_str (char *dest, size_t destlen, size_t col, char op, const cha
       if (flags & M_FORMAT_OPTIONAL)
       {
 	if (folder->ff->nd->unread != 0)
-	  mutt_FormatString (dest, destlen, col, ifstring, newsgroup_format_str,
+	  mutt_FormatString (dest, destlen, col, cols, ifstring, newsgroup_format_str,
 		data, flags);
 	else
-	  mutt_FormatString (dest, destlen, col, elsestring, newsgroup_format_str,
+	  mutt_FormatString (dest, destlen, col, cols, elsestring, newsgroup_format_str,
 		data, flags);
       }
       else if (Context && Context->data == folder->ff->nd)
@@ -814,11 +814,11 @@ static void folder_entry (char *s, size_t slen, MUTTMENU *menu, int num)
   
 #ifdef USE_NNTP
   if (option (OPTNEWS))
-    mutt_FormatString (s, slen, 0, NONULL(GroupFormat), newsgroup_format_str, 
+    mutt_FormatString (s, slen, 0, MuttIndexWindow->cols, NONULL(GroupFormat), newsgroup_format_str, 
       (unsigned long) &folder, M_FORMAT_ARROWCURSOR);
   else
 #endif
-  mutt_FormatString (s, slen, 0, NONULL(FolderFormat), folder_format_str, 
+  mutt_FormatString (s, slen, 0, MuttIndexWindow->cols, NONULL(FolderFormat), folder_format_str, 
       (unsigned long) &folder, M_FORMAT_ARROWCURSOR);
 }
 
@@ -830,7 +830,7 @@ static void vfolder_entry (char *s, size_t slen, MUTTMENU *menu, int num)
   folder.ff = &((struct folder_file *) menu->data)[num];
   folder.num = num;
 
-  mutt_FormatString (s, slen, 0, NONULL(VirtFolderFormat), folder_format_str,
+  mutt_FormatString (s, slen, 0, MuttIndexWindow->cols, NONULL(VirtFolderFormat), folder_format_str,
       (unsigned long) &folder, M_FORMAT_ARROWCURSOR);
 }
 #endif
diff --git a/compose.c b/compose.c
index 6eeb8e8..006af0e 100644
--- a/compose.c
+++ b/compose.c
@@ -136,7 +136,7 @@ static struct mapping_t ComposeNewsHelp[] = {
 
 static void snd_entry (char *b, size_t blen, MUTTMENU *menu, int num)
 {
-    mutt_FormatString (b, blen, 0, NONULL (AttachFormat), mutt_attach_fmt,
+  mutt_FormatString (b, blen, 0, MuttIndexWindow->cols, NONULL (AttachFormat), mutt_attach_fmt,
 	    (unsigned long)(((ATTACHPTR **) menu->data)[num]),
 	    M_FORMAT_STAT_FILE | M_FORMAT_ARROWCURSOR);
 }
@@ -469,7 +469,7 @@ static unsigned long cum_attachs_size (MUTTMENU *menu)
 }
 
 /* prototype for use below */
-static void compose_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *menu, 
+static void compose_status_line (char *buf, size_t buflen, size_t col, int cols, MUTTMENU *menu, 
       const char *p);
 
 /*
@@ -485,7 +485,7 @@ static void compose_status_line (char *buf, size_t buflen, size_t col, MUTTMENU
  */
 
 static const char *
-compose_format_str (char *buf, size_t buflen, size_t col, char op, const char *src,
+compose_format_str (char *buf, size_t buflen, size_t col, int cols, char op, const char *src,
 		   const char *prefix, const char *ifstring,
 		   const char *elsestring,
 		   unsigned long data, format_flag flags)
@@ -528,17 +528,17 @@ compose_format_str (char *buf, size_t buflen, size_t col, char op, const char *s
   }
 
   if (optional)
-    compose_status_line (buf, buflen, col, menu, ifstring);
+    compose_status_line (buf, buflen, col, cols, menu, ifstring);
   else if (flags & M_FORMAT_OPTIONAL)
-    compose_status_line (buf, buflen, col, menu, elsestring);
+    compose_status_line (buf, buflen, col, cols, menu, elsestring);
 
   return (src);
 }
 
-static void compose_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *menu, 
-      const char *p)
+static void compose_status_line (char *buf, size_t buflen, size_t col, int cols,
+                                 MUTTMENU *menu, const char *p)
 {
-  mutt_FormatString (buf, buflen, col, p, compose_format_str, 
+  mutt_FormatString (buf, buflen, col, cols, p, compose_format_str, 
         (unsigned long) menu, 0);
 }
 
@@ -1489,7 +1489,7 @@ int mutt_compose_menu (HEADER *msg,   /* structure for new message */
     /* Draw formatted compose status line */
     if (menu->redraw & REDRAW_STATUS) 
     {
-	compose_status_line (buf, sizeof (buf), 0, menu, NONULL(ComposeFormat));
+        compose_status_line (buf, sizeof (buf), 0, MuttStatusWindow->cols, menu, NONULL(ComposeFormat));
 	mutt_window_move (MuttStatusWindow, 0, 0);
 	SETCOLOR (MT_COLOR_STATUS);
 	mutt_paddstr (MuttStatusWindow->cols, buf);
diff --git a/compress.c b/compress.c
index 641bf1f..67673d3 100644
--- a/compress.c
+++ b/compress.c
@@ -310,6 +310,7 @@ store_size (const CONTEXT *ctx)
  * @dest:        Buffer in which to save string
  * @destlen:     Buffer length
  * @col:         Starting column, UNUSED
+ * @cols:        Number of screen columns
  * @op:          printf-like operator, e.g. 't'
  * @src:         printf-like format string
  * @prefix:      Field formatting string, UNUSED
@@ -324,7 +325,7 @@ store_size (const CONTEXT *ctx)
  * Returns: src (unchanged)
  */
 static const char *
-cb_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+cb_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 	const char *fmt, const char *ifstring, const char *elsestring,
 	unsigned long data, format_flag flags)
 {
@@ -379,7 +380,7 @@ get_compression_cmd (const CONTEXT *ctx, const char *cmd)
 
 	char expanded[_POSIX_PATH_MAX];
 
-	mutt_FormatString (expanded, sizeof (expanded), 0, cmd, cb_format_str, (unsigned long) ctx, 0);
+	mutt_FormatString (expanded, sizeof (expanded), 0, sizeof (expanded), cmd, cb_format_str, (unsigned long) ctx, 0);
 	return safe_strdup (expanded);
 }
 
diff --git a/crypt-gpgme.c b/crypt-gpgme.c
index 479b58a..7173f42 100644
--- a/crypt-gpgme.c
+++ b/crypt-gpgme.c
@@ -2744,6 +2744,7 @@ int smime_gpgme_application_handler (BODY *a, STATE *s)
 static const char *crypt_entry_fmt (char *dest,
                                     size_t destlen,
 				    size_t col,
+                                    int cols,
                                     char op,
                                     const char *src,
                                     const char *prefix,
@@ -2941,9 +2942,9 @@ static const char *crypt_entry_fmt (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, mutt_attach_fmt, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, mutt_attach_fmt, data, 0);
   return (src);
 }
       
@@ -2956,7 +2957,7 @@ static void crypt_entry (char *s, size_t l, MUTTMENU * menu, int num)
   entry.key = key_table[num];
   entry.num = num + 1;
 
-  mutt_FormatString (s, l, 0, NONULL (PgpEntryFormat), crypt_entry_fmt, 
+  mutt_FormatString (s, l, 0, MuttIndexWindow->cols, NONULL (PgpEntryFormat), crypt_entry_fmt, 
 		     (unsigned long) &entry, M_FORMAT_ARROWCURSOR);
 }
 
diff --git a/hdrline.c b/hdrline.c
index de71bfc..c8b0818 100644
--- a/hdrline.c
+++ b/hdrline.c
@@ -277,6 +277,7 @@ static const char *
 hdr_format_str (char *dest,
 		size_t destlen,
 		size_t col,
+                int cols,
 		char op,
 		const char *src,
 		const char *prefix,
@@ -1021,9 +1022,9 @@ hdr_format_str (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, hdr_format_str, (unsigned long) hfi, flags);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, hdr_format_str, (unsigned long) hfi, flags);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, hdr_format_str, (unsigned long) hfi, flags);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, hdr_format_str, (unsigned long) hfi, flags);
 
   return (src);
 #undef THREAD_NEW
@@ -1039,11 +1040,11 @@ _mutt_make_string (char *dest, size_t destlen, const char *s, CONTEXT *ctx, HEAD
   hfi.ctx = ctx;
   hfi.pager_progress = 0;
 
-  mutt_FormatString (dest, destlen, 0, s, hdr_format_str, (unsigned long) &hfi, flags);
+  mutt_FormatString (dest, destlen, 0, MuttIndexWindow->cols, s, hdr_format_str, (unsigned long) &hfi, flags);
 }
 
 void
 mutt_make_string_info (char *dst, size_t dstlen, const char *s, struct hdr_format_info *hfi, format_flag flags)
 {
-  mutt_FormatString (dst, dstlen, 0, s, hdr_format_str, (unsigned long) hfi, flags);
+  mutt_FormatString (dst, dstlen, 0, MuttIndexWindow->cols, s, hdr_format_str, (unsigned long) hfi, flags);
 }
diff --git a/muttlib.c b/muttlib.c
index 6cc1bc2..f665a5a 100644
--- a/muttlib.c
+++ b/muttlib.c
@@ -1148,6 +1148,7 @@ void mutt_safe_path (char *s, size_t l, ADDRESS *a)
 void mutt_FormatString (char *dest,		/* output buffer */
 			size_t destlen,		/* output buffer len */
 			size_t col,		/* starting column (nonzero when called recursively) */
+                        int cols,               /* maximum columns */
 			const char *src,	/* template string */
 			format_t *callback,	/* callback for processing */
 			unsigned long data,	/* callback data */
@@ -1212,7 +1213,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
         mutt_extract_token(word, srcbuf, 0);
         dprint(3, (debugfile, "fmtpipe %2d: %s\n", i++, word->data));
         mutt_buffer_addch(command, '\'');
-        mutt_FormatString(buf, sizeof(buf), 0, word->data, callback, data,
+        mutt_FormatString(buf, sizeof(buf), 0, cols, word->data, callback, data,
                           flags | M_FORMAT_NOFILTER);
         for (p = buf; p && *p; p++)
         {
@@ -1267,7 +1268,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
 		 * it back for the recursive call since the expansion of
 		 * format pipes does not try to append a nul itself.
 		 */
-		mutt_FormatString(dest, destlen+1, col, recycler, callback, data, flags);
+		mutt_FormatString(dest, destlen+1, col, cols, recycler, callback, data, flags);
 		FREE(&recycler);
 	      }
 	    }
@@ -1428,16 +1429,16 @@ void mutt_FormatString (char *dest,		/* output buffer */
 	  pl = pw = 1;
 
 	/* see if there's room to add content, else ignore */
-	if ((col < (COLS - SidebarWidth) && (wlen < destlen)) || soft)
+	if ((col < cols && wlen < destlen) || soft)
 	{
 	  int pad;
 
 	  /* get contents after padding */
-	  mutt_FormatString (buf, sizeof (buf), 0, src + pl, callback, data, flags);
+	  mutt_FormatString (buf, sizeof (buf), 0, cols, src + pl, callback, data, flags);
 	  len = mutt_strlen (buf);
 	  wid = mutt_strwidth (buf);
 
-	  pad = (COLS - col - wid) / pw;
+	  pad = (cols - col - wid) / pw;
 	  if (pad >= 0)
 	  {
             /* try to consume as many columns as we can, if we don't have
@@ -1448,7 +1449,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
             {
               /* Add pre-spacing to make multi-column pad characters and
                * the contents after padding line up */
-              while ((col + (pad * pw) + wid < COLS) &&
+              while ((col + (pad * pw) + wid < cols) &&
                      (wlen + (pad * pl) + len < destlen))
               {
                 *wptr++ = ' ';
@@ -1467,7 +1468,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
 	  else if (soft && pad < 0)
 	  {
 	    int offset = ((flags & M_FORMAT_ARROWCURSOR) && option (OPTARROWCURSOR)) ? 3 : 0;
-            int avail_cols = (COLS > offset) ? (COLS - offset) : 0;
+            int avail_cols = (cols > offset) ? (cols - offset) : 0;
 	    /* \0-terminate dest for length computation in mutt_wstr_trunc() */
 	    *wptr = 0;
 	    /* make sure right part is at most as wide as display */
@@ -1485,7 +1486,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
             }
 	  }
 	  if (len + wlen > destlen)
-	    len = mutt_wstr_trunc (buf, destlen - wlen, COLS - SidebarWidth - col, NULL);
+	    len = mutt_wstr_trunc (buf, destlen - wlen, cols - col, NULL);
 	  memcpy (wptr, buf, len);
 	  wptr += len;
 	  wlen += len;
@@ -1502,9 +1503,9 @@ void mutt_FormatString (char *dest,		/* output buffer */
 	  pl = pw = 1;
 
 	/* see if there's room to add content, else ignore */
-	if (col < COLS && wlen < destlen)
+	if (col < cols && wlen < destlen)
 	{
-	  c = (COLS - col) / pw;
+	  c = (cols - col) / pw;
 	  if (c > 0 && wlen + (c * pl) > destlen)
 	    c = ((signed)(destlen - wlen)) / pl;
 	  while (c > 0)
@@ -1535,7 +1536,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
 	}
 	
 	/* use callback function to handle this case */
-	src = callback (buf, sizeof (buf), col, ch, src, prefix, ifstring, elsestring, data, flags);
+	src = callback (buf, sizeof (buf), col, cols, ch, src, prefix, ifstring, elsestring, data, flags);
 
 	if (tolower)
 	  mutt_strlower (buf);
@@ -1548,7 +1549,7 @@ void mutt_FormatString (char *dest,		/* output buffer */
 	}
 	
 	if ((len = mutt_strlen (buf)) + wlen > destlen)
-	  len = mutt_wstr_trunc (buf, destlen - wlen, COLS - col, NULL);
+	  len = mutt_wstr_trunc (buf, destlen - wlen, cols - col, NULL);
 
 	memcpy (wptr, buf, len);
 	wptr += len;
diff --git a/newsrc.c b/newsrc.c
index e8c3c9c..d2123bc 100644
--- a/newsrc.c
+++ b/newsrc.c
@@ -800,7 +800,7 @@ void nntp_clear_cache (NNTP_SERVER *nserv)
  * %S = url schema
  * %u = username */
 const char *
-nntp_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+nntp_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 		const char *fmt, const char *ifstring, const char *elsestring,
 		unsigned long data, format_flag flags)
 {
@@ -973,8 +973,8 @@ NNTP_SERVER *nntp_select_server (char *server, int leave_lock)
   /* load .newsrc */
   if (rc >= 0)
   {
-    mutt_FormatString (file, sizeof (file), 0, NONULL (NewsRc),
-		       nntp_format_str, (unsigned long)nserv, 0);
+    mutt_FormatString (file, sizeof (file), 0, MuttIndexWindow->cols,
+		    NONULL (NewsRc), nntp_format_str, (unsigned long)nserv, 0);
     mutt_expand_path (file, sizeof (file));
     nserv->newsrc_file = safe_strdup (file);
     rc = nntp_newsrc_parse (nserv);
diff --git a/nntp.h b/nntp.h
index 705c524..2f37793 100644
--- a/nntp.h
+++ b/nntp.h
@@ -154,7 +154,7 @@ void nntp_newsrc_close (NNTP_SERVER *);
 void nntp_buffy (char *, size_t);
 void nntp_expand_path (char *, size_t, ACCOUNT *);
 void nntp_clear_cache (NNTP_SERVER *);
-const char *nntp_format_str (char *, size_t, size_t, char, const char *,
+const char *nntp_format_str (char *, size_t, size_t, int, char, const char *,
 			     const char *, const char *, const char *,
 			     unsigned long, format_flag);
 
diff --git a/pgpinvoke.c b/pgpinvoke.c
index 7334192..cf7e6c9 100644
--- a/pgpinvoke.c
+++ b/pgpinvoke.c
@@ -59,6 +59,7 @@ struct pgp_command_context {
 const char *_mutt_fmt_pgp_command (char *dest,
 				   size_t destlen,
 				   size_t col,
+                                   int cols,
 				   char op,
 				   const char *src,
 				   const char *prefix,
@@ -140,16 +141,16 @@ const char *_mutt_fmt_pgp_command (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, _mutt_fmt_pgp_command, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, _mutt_fmt_pgp_command, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, _mutt_fmt_pgp_command, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, _mutt_fmt_pgp_command, data, 0);
 
   return (src);
 }
 
 void mutt_pgp_command (char *d, size_t dlen, struct pgp_command_context *cctx, const char *fmt)
 {
-  mutt_FormatString (d, dlen, 0, NONULL (fmt), _mutt_fmt_pgp_command, (unsigned long) cctx, 0);
+  mutt_FormatString (d, dlen, 0, MuttIndexWindow->cols, NONULL (fmt), _mutt_fmt_pgp_command, (unsigned long) cctx, 0);
   dprint (2, (debugfile, "mutt_pgp_command: %s\n", d));
 }
 
diff --git a/pgpkey.c b/pgpkey.c
index 80bd7de..cdaa036 100644
--- a/pgpkey.c
+++ b/pgpkey.c
@@ -122,6 +122,7 @@ typedef struct pgp_entry
 static const char *pgp_entry_fmt (char *dest,
 				  size_t destlen,
 				  size_t col,
+                                  int cols,
 				  char op,
 				  const char *src,
 				  const char *prefix,
@@ -278,9 +279,9 @@ static const char *pgp_entry_fmt (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, mutt_attach_fmt, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, mutt_attach_fmt, data, 0);
   return (src);
 }
 
@@ -292,7 +293,7 @@ static void pgp_entry (char *s, size_t l, MUTTMENU * menu, int num)
   entry.uid = KeyTable[num];
   entry.num = num + 1;
 
-  mutt_FormatString (s, l, 0, NONULL (PgpEntryFormat), pgp_entry_fmt, 
+  mutt_FormatString (s, l, 0, MuttIndexWindow->cols, NONULL (PgpEntryFormat), pgp_entry_fmt, 
 		     (unsigned long) &entry, M_FORMAT_ARROWCURSOR);
 }
 
diff --git a/protos.h b/protos.h
index 55d6598..79d877b 100644
--- a/protos.h
+++ b/protos.h
@@ -72,9 +72,9 @@ int _mutt_traverse_thread (CONTEXT *ctx, HEADER *hdr, int flag);
 #define mutt_new_envelope() safe_calloc (1, sizeof (ENVELOPE))
 #define mutt_new_enter_state() safe_calloc (1, sizeof (ENTER_STATE))
 
-typedef const char * format_t (char *, size_t, size_t, char, const char *, const char *, const char *, const char *, unsigned long, format_flag);
+typedef const char * format_t (char *, size_t, size_t, int, char, const char *, const char *, const char *, const char *, unsigned long, format_flag);
 
-void mutt_FormatString (char *, size_t, size_t, const char *, format_t *, unsigned long, format_flag);
+void mutt_FormatString (char *, size_t, size_t, int, const char *, format_t *, unsigned long, format_flag);
 void mutt_parse_content_type (char *, BODY *);
 void mutt_generate_boundary (PARAMETER **);
 void mutt_delete_parameter (const char *attribute, PARAMETER **p);
@@ -132,6 +132,7 @@ const char *mutt_attach_fmt (
 	char *dest,
 	size_t destlen,
 	size_t col,
+        int cols,
 	char op,
 	const char *src,
 	const char *prefix,
diff --git a/query.c b/query.c
index 8bcffbd..361b38e 100644
--- a/query.c
+++ b/query.c
@@ -183,7 +183,7 @@ static int query_search (MUTTMENU *m, regex_t *re, int n)
   return REG_NOMATCH;
 }
 
-static const char * query_format_str (char *dest, size_t destlen, size_t col,
+static const char * query_format_str (char *dest, size_t destlen, size_t col, int cols,
 				      char op, const char *src,
 				      const char *fmt, const char *ifstring,
 				      const char *elsestring,
@@ -230,9 +230,9 @@ static const char * query_format_str (char *dest, size_t destlen, size_t col,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, query_format_str, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, query_format_str, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, query_format_str, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, query_format_str, data, 0);
 
   return src;
 }
@@ -242,7 +242,7 @@ static void query_entry (char *s, size_t slen, MUTTMENU *m, int num)
   ENTRY *entry = &((ENTRY *) m->data)[num];
 
   entry->data->num = num;
-  mutt_FormatString (s, slen, 0, NONULL (QueryFormat), query_format_str,
+  mutt_FormatString (s, slen, 0, MuttIndexWindow->cols, NONULL (QueryFormat), query_format_str,
 		     (unsigned long) entry, M_FORMAT_ARROWCURSOR);
 }
 
diff --git a/recvattach.c b/recvattach.c
index 6a513b1..9d1c7b6 100644
--- a/recvattach.c
+++ b/recvattach.c
@@ -173,6 +173,7 @@ ATTACHPTR **mutt_gen_attach_list (BODY *m,
 const char *mutt_attach_fmt (char *dest,
     size_t destlen,
     size_t col,
+    int cols,
     char op,
     const char *src,
     const char *prefix,
@@ -365,15 +366,15 @@ const char *mutt_attach_fmt (char *dest,
   }
   
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, mutt_attach_fmt, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, mutt_attach_fmt, data, 0);
   return (src);
 }
 
 static void attach_entry (char *b, size_t blen, MUTTMENU *menu, int num)
 {
-  mutt_FormatString (b, blen, 0, NONULL (AttachFormat), mutt_attach_fmt, (unsigned long) (((ATTACHPTR **)menu->data)[num]), M_FORMAT_ARROWCURSOR);
+  mutt_FormatString (b, blen, 0, MuttIndexWindow->cols, NONULL (AttachFormat), mutt_attach_fmt, (unsigned long) (((ATTACHPTR **)menu->data)[num]), M_FORMAT_ARROWCURSOR);
 }
 
 int mutt_tag_attach (MUTTMENU *menu, int n, int m)
diff --git a/remailer.c b/remailer.c
index aea933b..51384f7 100644
--- a/remailer.c
+++ b/remailer.c
@@ -377,6 +377,7 @@ static const char *mix_format_caps (REMAILER *r)
 static const char *mix_entry_fmt (char *dest,
 				  size_t destlen,
 				  size_t col,
+                                  int cols,
 				  char op,
 				  const char *src,
 				  const char *prefix,
@@ -429,9 +430,9 @@ static const char *mix_entry_fmt (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, ifstring, mutt_attach_fmt, data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, mutt_attach_fmt, data, 0);
+    mutt_FormatString (dest, destlen, col, cols, elsestring, mutt_attach_fmt, data, 0);
   return (src);
 }
 
@@ -440,7 +441,7 @@ static const char *mix_entry_fmt (char *dest,
 static void mix_entry (char *b, size_t blen, MUTTMENU *menu, int num)
 {
   REMAILER **type2_list = (REMAILER **) menu->data;
-  mutt_FormatString (b, blen, 0, NONULL (MixEntryFormat), mix_entry_fmt,
+  mutt_FormatString (b, blen, 0, MuttIndexWindow->cols, NONULL (MixEntryFormat), mix_entry_fmt,
 		     (unsigned long) type2_list[num], M_FORMAT_ARROWCURSOR);
 }
 
diff --git a/sendlib.c b/sendlib.c
index 1a2cf89..cbd04dd 100644
--- a/sendlib.c
+++ b/sendlib.c
@@ -2393,7 +2393,7 @@ mutt_invoke_sendmail (ADDRESS *from,	/* the sender */
   {
     char cmd[LONG_STRING];
 
-    mutt_FormatString (cmd, sizeof (cmd), 0, NONULL (Inews), nntp_format_str, 0, 0);
+    mutt_FormatString (cmd, sizeof (cmd), 0, MuttIndexWindow->cols, NONULL (Inews), nntp_format_str, 0, 0);
     if (!*cmd)
     {
       i = nntp_post (msg);
diff --git a/sidebar.c b/sidebar.c
index 4252716..bf10cac 100644
--- a/sidebar.c
+++ b/sidebar.c
@@ -154,6 +154,7 @@ find_prev_new (int wrap)
  * @dest:        Buffer in which to save string
  * @destlen:     Buffer length
  * @col:         Starting column, UNUSED
+ * @cols:        Number of screen columns
  * @op:          printf-like operator, e.g. 'B'
  * @src:         printf-like format string
  * @prefix:      Field formatting string, UNUSED
@@ -170,7 +171,7 @@ find_prev_new (int wrap)
  * Returns: src (unchanged)
  */
 static const char *
-cb_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
+cb_format_str (char *dest, size_t destlen, size_t col, int cols, char op, const char *src,
 	const char *prefix, const char *ifstring, const char *elsestring,
 	unsigned long data, format_flag flags)
 {
@@ -265,9 +266,9 @@ cb_format_str (char *dest, size_t destlen, size_t col, char op, const char *src,
 	}
 
 	if (optional)
-		mutt_FormatString (dest, destlen, col, ifstring,   cb_format_str, (unsigned long) sbe, flags);
+		mutt_FormatString (dest, destlen, col, cols, ifstring,   cb_format_str, (unsigned long) sbe, flags);
 	else if (flags & M_FORMAT_OPTIONAL)
-		mutt_FormatString (dest, destlen, col, elsestring, cb_format_str, (unsigned long) sbe, flags);
+		mutt_FormatString (dest, destlen, col, cols, elsestring, cb_format_str, (unsigned long) sbe, flags);
 
 	/* We return the format string, unchanged */
 	return src;
diff --git a/smime.c b/smime.c
index 7f9a8b5..897c9e0 100644
--- a/smime.c
+++ b/smime.c
@@ -159,6 +159,7 @@ int smime_valid_passphrase (void)
 static const char *_mutt_fmt_smime_command (char *dest,
 					    size_t destlen,
 					    size_t col,
+                                            int cols,
 					    char op,
 					    const char *src,
 					    const char *prefix,
@@ -284,10 +285,10 @@ static const char *_mutt_fmt_smime_command (char *dest,
   }
 
   if (optional)
-    mutt_FormatString (dest, destlen, col, ifstring, _mutt_fmt_smime_command,
+    mutt_FormatString (dest, destlen, col, cols, ifstring, _mutt_fmt_smime_command,
 		       data, 0);
   else if (flags & M_FORMAT_OPTIONAL)
-    mutt_FormatString (dest, destlen, col, elsestring, _mutt_fmt_smime_command,
+    mutt_FormatString (dest, destlen, col, cols, elsestring, _mutt_fmt_smime_command,
 		       data, 0);
 
   return (src);
@@ -298,7 +299,7 @@ static const char *_mutt_fmt_smime_command (char *dest,
 static void mutt_smime_command (char *d, size_t dlen,
 				struct smime_command_context *cctx, const char *fmt)
 {
-  mutt_FormatString (d, dlen, 0, NONULL(fmt), _mutt_fmt_smime_command,
+  mutt_FormatString (d, dlen, 0, MuttIndexWindow->cols, NONULL(fmt), _mutt_fmt_smime_command,
 		    (unsigned long) cctx, 0);
   dprint (2,(debugfile, "mutt_smime_command: %s\n", d));
 }
diff --git a/status.c b/status.c
index 101fa81..c3d6591 100644
--- a/status.c
+++ b/status.c
@@ -44,7 +44,7 @@ static char *get_sort_str (char *buf, size_t buflen, int method)
   return buf;
 }
 
-static void _menu_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *menu, const char *p);
+static void _menu_status_line (char *buf, size_t buflen, size_t col, int cols, MUTTMENU *menu, const char *p);
 
 /* %b = number of incoming folders with unread messages [option]
  * %d = number of deleted messages [option]
@@ -66,7 +66,7 @@ static void _menu_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *m
  * %v = Mutt version 
  * %V = currently active limit pattern [option] */
 static const char *
-status_format_str (char *buf, size_t buflen, size_t col, char op, const char *src,
+status_format_str (char *buf, size_t buflen, size_t col, int cols, char op, const char *src,
 		   const char *prefix, const char *ifstring,
 		   const char *elsestring,
 		   unsigned long data, format_flag flags)
@@ -309,19 +309,19 @@ status_format_str (char *buf, size_t buflen, size_t col, char op, const char *sr
   }
 
   if (optional)
-    _menu_status_line (buf, buflen, col, menu, ifstring);
+    _menu_status_line (buf, buflen, col, cols, menu, ifstring);
   else if (flags & M_FORMAT_OPTIONAL)
-    _menu_status_line (buf, buflen, col, menu, elsestring);
+    _menu_status_line (buf, buflen, col, cols, menu, elsestring);
 
   return (src);
 }
 
-static void _menu_status_line (char *buf, size_t buflen, size_t col, MUTTMENU *menu, const char *p)
+static void _menu_status_line (char *buf, size_t buflen, size_t col, int cols, MUTTMENU *menu, const char *p)
 {
-  mutt_FormatString (buf, buflen, col, p, status_format_str, (unsigned long) menu, 0);
+  mutt_FormatString (buf, buflen, col, cols, p, status_format_str, (unsigned long) menu, 0);
 }
 
 void menu_status_line (char *buf, size_t buflen, MUTTMENU *menu, const char *p)
 {
-  mutt_FormatString (buf, buflen, 0, p, status_format_str, (unsigned long) menu, 0);
+  mutt_FormatString (buf, buflen, 0, MuttStatusWindow->cols, p, status_format_str, (unsigned long) menu, 0);
 }
-- 
2.8.2

