From 95fa47ddfbfbc6d4a5a767f3dbda793bb109a0bf Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Fri, 6 May 2016 00:24:10 +0100
Subject: [PATCH 20/22] upstream/809802_timeout_hook

---
 curs_main.c |  4 +++-
 hook.c      | 29 ++++++++++++++++++++++++++++-
 init.h      |  1 +
 mutt.h      |  7 ++++---
 protos.h    |  1 +
 5 files changed, 37 insertions(+), 5 deletions(-)

diff --git a/curs_main.c b/curs_main.c
index e37b043..5a00e6c 100644
--- a/curs_main.c
+++ b/curs_main.c
@@ -933,8 +933,10 @@ int mutt_index_menu (void)
 
       dprint(4, (debugfile, "mutt_index_menu[%d]: Got op %d\n", __LINE__, op));
 
-      if (op == -1)
+      if (op == -1) {
+        mutt_timeout_hook(".");
 	continue; /* either user abort or timeout */
+      }
 
       mutt_curs_set (1);
 
diff --git a/hook.c b/hook.c
index 98c2f26..329fb47 100644
--- a/hook.c
+++ b/hook.c
@@ -154,7 +154,7 @@ int mutt_parse_hook (BUFFER *buf, BUFFER *s, unsigned long data, BUFFER *err)
 	ptr->rx.not == not &&
 	!mutt_strcmp (pattern.data, ptr->rx.pattern))
     {
-      if (data & (M_FOLDERHOOK | M_SENDHOOK | M_SEND2HOOK | M_MESSAGEHOOK | M_ACCOUNTHOOK | M_REPLYHOOK | M_CRYPTHOOK))
+      if (data & (M_FOLDERHOOK | M_SENDHOOK | M_SEND2HOOK | M_MESSAGEHOOK | M_ACCOUNTHOOK | M_REPLYHOOK | M_CRYPTHOOK | M_TIMEOUTHOOK))
       {
 	/* these hooks allow multiple commands with the same
 	 * pattern, so if we've already seen this pattern/command pair, just
@@ -506,6 +506,33 @@ LIST *mutt_crypt_hook (ADDRESS *adr)
   return _mutt_list_hook (adr->mailbox, M_CRYPTHOOK);
 }
 
+
+void mutt_timeout_hook (const char *chs)
+{
+  HOOK* hook;
+  BUFFER token;
+  BUFFER err;
+  char buf[STRING];
+
+  err.data = buf;
+  err.dsize = sizeof (buf);
+  memset (&token, 0, sizeof (token));
+
+  for (hook = Hooks; hook; hook = hook->next)
+  {
+    if (! (hook->command && (hook->type & M_TIMEOUTHOOK)))
+      continue;
+
+    if (mutt_parse_rc_line (hook->command, &token, &err) == -1)
+    {
+      FREE (&token.data);
+      mutt_error ("%s", err.data);
+      mutt_sleep (1);
+
+      return;
+    }
+  }
+}
 #ifdef USE_SOCKET
 void mutt_account_hook (const char* url)
 {
diff --git a/init.h b/init.h
index 064a945..41de402 100644
--- a/init.h
+++ b/init.h
@@ -4335,6 +4335,7 @@ const struct command_t Commands[] = {
   { "spam",		parse_spam_list,	M_SPAM },
   { "nospam",		parse_spam_list,	M_NOSPAM },
   { "subscribe",	parse_subscribe,	0 },
+  { "timeout-hook",	mutt_parse_hook,	M_TIMEOUTHOOK },
   { "toggle",		parse_set,		M_SET_INV },
   { "unalias",		parse_unalias,		0 },
   { "unalternative_order",parse_unlist,		UL &AlternativeOrderList },
diff --git a/mutt.h b/mutt.h
index d4e7404..5fc2042 100644
--- a/mutt.h
+++ b/mutt.h
@@ -159,10 +159,11 @@ typedef enum
 #define M_ACCOUNTHOOK	(1<<9)
 #define M_REPLYHOOK	(1<<10)
 #define M_SEND2HOOK     (1<<11)
+#define M_TIMEOUTHOOK	(1<<12)
 #ifdef USE_COMPRESSED
-#define M_OPENHOOK	(1<<12)
-#define M_APPENDHOOK	(1<<13)
-#define M_CLOSEHOOK	(1<<14)
+#define M_OPENHOOK	(1<<13)
+#define M_APPENDHOOK	(1<<14)
+#define M_CLOSEHOOK	(1<<15)
 #endif
 
 /* tree characters for linearize_tree and print_enriched_string */
diff --git a/protos.h b/protos.h
index a295b23..2bc40b7 100644
--- a/protos.h
+++ b/protos.h
@@ -154,6 +154,7 @@ const char *mutt_get_name (ADDRESS *);
 char *mutt_get_parameter (const char *, PARAMETER *);
 LIST *mutt_crypt_hook (ADDRESS *);
 char *mutt_make_date (char *, size_t);
+void mutt_timeout_hook (const char *);
 
 const char *mutt_make_version (void);
 
-- 
2.7.4

