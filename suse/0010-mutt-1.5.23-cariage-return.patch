From 131f7ab16b59c224a477e644129a09e103676171 Mon Sep 17 00:00:00 2001
From: Richard Russon <rich@flatcap.org>
Date: Fri, 27 May 2016 03:09:05 +0100
Subject: [PATCH 10/12] mutt-1.5.23-cariage-return

---
 lib.c   | 12 ++++++++++++
 lib.h   |  1 +
 pager.c |  2 +-
 pgp.c   | 24 ++++++++++++------------
 4 files changed, 26 insertions(+), 13 deletions(-)

diff --git a/lib.c b/lib.c
index ea24292..3c11499 100644
--- a/lib.c
+++ b/lib.c
@@ -884,6 +884,18 @@ int mutt_strcmp(const char *a, const char *b)
   return strcmp(NONULL(a), NONULL(b));
 }
 
+int mutt_strxcmp(const char *a, const char *b)
+{
+  size_t xa, xb;
+  xa = strcspn(NONULL(a), "\r\n");
+  xb = strcspn(NONULL(b), "\r\n");
+  if (xb != xa)
+    return -1;
+  if (!xa)
+    return 0;
+  return strncmp(NONULL(a), NONULL(b), xa);
+}
+
 int mutt_strcasecmp(const char *a, const char *b)
 {
   return strcasecmp(NONULL(a), NONULL(b));
diff --git a/lib.h b/lib.h
index eddfc70..35f3efc 100644
--- a/lib.h
+++ b/lib.h
@@ -197,6 +197,7 @@ int mutt_copy_bytes (FILE *, FILE *, size_t);
 int mutt_rx_sanitize_string (char *, size_t, const char *);
 int mutt_strcasecmp (const char *, const char *);
 int mutt_strcmp (const char *, const char *);
+int mutt_strxcmp (const char *, const char *);
 int mutt_strncasecmp (const char *, const char *, size_t);
 int mutt_strncmp (const char *, const char *, size_t);
 int mutt_strcoll (const char *, const char *);
diff --git a/pager.c b/pager.c
index 21dda91..f0e987b 100644
--- a/pager.c
+++ b/pager.c
@@ -774,7 +774,7 @@ resolve_types (char *buf, char *raw, struct line_t *lineInfo, int n, int last,
   else if (check_attachment_marker ((char *) raw) == 0)
     lineInfo[n].type = MT_COLOR_ATTACHMENT;
 #endif
-  else if (mutt_strcmp ("-- \n", buf) == 0 || mutt_strcmp ("-- \r\n", buf) == 0)
+  else if (mutt_strxcmp ("-- \n", buf) == 0)
   {
     i = n + 1;
 
diff --git a/pgp.c b/pgp.c
index 0caff87..99b61d6 100644
--- a/pgp.c
+++ b/pgp.c
@@ -302,7 +302,7 @@ static void pgp_copy_clearsigned (FILE *fpin, STATE *s, char *charset)
       continue;
     }
 
-    if (mutt_strcmp (buf, "-----BEGIN PGP SIGNATURE-----\n") == 0)
+    if (mutt_strxcmp (buf, "-----BEGIN PGP SIGNATURE-----\n") == 0)
       break;
     
     if (armor_header)
@@ -368,14 +368,14 @@ int pgp_application_pgp_handler (BODY *m, STATE *s)
     {
       clearsign = 0;
 
-      if (mutt_strcmp ("MESSAGE-----\n", buf + 15) == 0)
+      if (mutt_strxcmp ("MESSAGE-----\n", buf + 15) == 0)
         needpass = 1;
-      else if (mutt_strcmp ("SIGNED MESSAGE-----\n", buf + 15) == 0)
+      else if (mutt_strxcmp ("SIGNED MESSAGE-----\n", buf + 15) == 0)
       {
 	clearsign = 1;
         needpass = 0;
       }
-      else if (!mutt_strcmp ("PUBLIC KEY BLOCK-----\n", buf + 15))
+      else if (!mutt_strxcmp ("PUBLIC KEY BLOCK-----\n", buf + 15))
       {
         needpass = 0;
         pgp_keyblock = 1;
@@ -408,10 +408,10 @@ int pgp_application_pgp_handler (BODY *m, STATE *s)
 	
 	fputs (buf, tmpfp);
 
-	if ((needpass && mutt_strcmp ("-----END PGP MESSAGE-----\n", buf) == 0) ||
+	if ((needpass && mutt_strxcmp ("-----END PGP MESSAGE-----\n", buf) == 0) ||
 	    (!needpass 
-             && (mutt_strcmp ("-----END PGP SIGNATURE-----\n", buf) == 0
-                 || mutt_strcmp ("-----END PGP PUBLIC KEY BLOCK-----\n",buf) == 0)))
+             && (mutt_strxcmp ("-----END PGP SIGNATURE-----\n", buf) == 0
+                 || mutt_strxcmp ("-----END PGP PUBLIC KEY BLOCK-----\n",buf) == 0)))
 	  break;
 	/* remember optional Charset: armor header as defined by RfC4880 */
 	if (mutt_strncmp ("Charset: ", buf, 9) == 0)
@@ -645,11 +645,11 @@ static int pgp_check_traditional_one_body (FILE *fp, BODY *b, int tagged_only)
   {
     if (mutt_strncmp ("-----BEGIN PGP ", buf, 15) == 0)
     {
-      if (mutt_strcmp ("MESSAGE-----\n", buf + 15) == 0)
+      if (mutt_strxcmp ("MESSAGE-----\n", buf + 15) == 0)
 	enc = 1;
-      else if (mutt_strcmp ("SIGNED MESSAGE-----\n", buf + 15) == 0)
+      else if (mutt_strxcmp ("SIGNED MESSAGE-----\n", buf + 15) == 0)
 	sgn = 1;
-      else if (mutt_strcmp ("PUBLIC KEY BLOCK-----\n", buf + 15) == 0)
+      else if (mutt_strxcmp ("PUBLIC KEY BLOCK-----\n", buf + 15) == 0)
 	key = 1;
     }
   }
@@ -1197,9 +1197,9 @@ BODY *pgp_sign_message (BODY *a)
    */
   while (fgets (buffer, sizeof (buffer) - 1, pgpout) != NULL)
   {
-    if (mutt_strcmp ("-----BEGIN PGP MESSAGE-----\n", buffer) == 0)
+    if (mutt_strxcmp ("-----BEGIN PGP MESSAGE-----\n", buffer) == 0)
       fputs ("-----BEGIN PGP SIGNATURE-----\n", fp);
-    else if (mutt_strcmp("-----END PGP MESSAGE-----\n", buffer) == 0)
+    else if (mutt_strxcmp("-----END PGP MESSAGE-----\n", buffer) == 0)
       fputs ("-----END PGP SIGNATURE-----\n", fp);
     else
       fputs (buffer, fp);
-- 
2.7.4

